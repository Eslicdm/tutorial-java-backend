services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      - BASIC_DB_USERNAME=${BASIC_DB_USERNAME}
      - BASIC_DB_PASSWORD=${BASIC_DB_PASSWORD}
      - BASIC_DB_GUESTNAME=${BASIC_DB_GUESTNAME}
      - BASIC_DB_GUESTPW=${BASIC_DB_GUESTPW}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      app_db:
        condition: service_healthy

  keycloak:
    image: quay.io/keycloak/keycloak:26.3.1
    command: start-dev
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak_db:5432/keycloakdb
      KC_DB_USERNAME: ${KC_DB_USERNAME}
      KC_DB_PASSWORD: ${KC_DB_PASSWORD}
      KC_HOSTNAME_URL: http://keycloak:8080
      KC_HOSTNAME_FRONTEND_URL: http://localhost:8080
    ports:
      - "8080:8080"
    depends_on:
      keycloak_db:
        condition: service_healthy

  keycloak_db:
    image: postgres:17
    environment:
      POSTGRES_USER: ${KC_DB_USERNAME}
      POSTGRES_PASSWORD: ${KC_DB_PASSWORD}
      POSTGRES_DB: keycloakdb
    ports:
      - "5434:5432"
    volumes:
      - keycloak-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${KC_DB_USERNAME} -d keycloakdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  app_db:
    image: postgres:17
    environment:
      POSTGRES_USER: ${BASIC_DB_USERNAME}
      POSTGRES_PASSWORD: ${BASIC_DB_PASSWORD}
      POSTGRES_DB: tutorial_java_db
    ports:
      - "5433:5432"
    volumes:
      - app-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${BASIC_DB_USERNAME} -d tutorial_java_db"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  keycloak-db-data:
  app-db-data: